%manual
NAME

  plot_acc_sum - Plots summary of the regional values of the anomaly
                 correlation, spread, RMS and perfect model ACC

DESCRIPTION

  Plots the ensemble-mean anomaly correlation against verification and in perfect
  model approach, the spread and the RMSE for all the start dates dealt with
  as a summary of the skill. Plots individual ensemble members and the ensemble 
  mean for individual models and ensemble-mean scores for multi-forecast system 
  predictions.
  Note that the output of this job is not stored in the tar files.

%end
%include <head.h>
%include <trap.h>
echo "start of plot_acc_sum.sms"
date
#
%include <sms_vars.h>
cd $SMSWORK
%include <config.h>
%include <def_exp2.h>
%include <def_exp3.h>
#
export MAGPLUS_VERSION=new
use magics++
#
# Get running date
#
typeset -Z2 DAY
typeset -Z5 ACC_NSAM
DAY=`date | cut -c9-10`
MON=`date | cut -c5-7`
YEA=`date | cut -c25-28`
DATE=${DAY}${MON}${YEA}
#
set -A DIAG_LIST ACC ACP SPR MSS RSR
typeset -Z5 NSAM
NSAM=$ACC_NSAM
#
# Get and compile fortran files
#
\rm -f plot_acc_map.x
cp ${PATHSO}/plot_acc_sum.f .
cp ${PATHSO}/tools.f .
cp ${PATHSO}/tools_plot.f .
# use magics
# pgf90 $COMPOP1 plot_acc_sum.f tools.f tools_plot.f -o plot_acc_sum.x $LINKLI2 $LINKLI1 $LINKLI3
#use newmagics++
pgf90 -g plot_acc_sum.f tools.f tools_plot.f -o plot_acc_sum.x $MAGPLUSLIB_SHARED $LINKLI1 $LINKLI3
ls -ltr plo*.x
#
# create psfiles and giffile directory in working directory, if not already existent
#
for ecdir in psfiles ${SMSGIF}/giffiles ; do
    if [[ -a $ecdir ]] ; then
       echo "directory for $ecdir exists already"
    else
       mkdir $ecdir
    fi
done
#
ecdir=psfiles
#
# Header for web page
#
if [[ $ACSP_GIF = 1 ]] ; then
   if [[ -s ${SMSGIF}/PopBox/scripts/PopBox.js ]] ; then
      echo "Java script present"
   else
      cp -r /home/rd/ney/SkinLayer/sh/PopBox/ ${SMSGIF}
   fi
cat>acc_sum.html<<EOF
<html><head>
<title>Summary of deterministic scores</title>
<link id="lnkStyleSheet" rel="stylesheet" type="text/css" href="PopBox/stylesheets/Styles.css" />
<script src="PopBox/scripts/PopBox.js"  type="text/javascript"></script>
</head>
<body>
EOF
fi
#
# Loop over experiments
# In case of multi-model, plot for every model used
#
if [[ $MULTI -eq 1 ]] ; then
   NUMCHECK=$NUMMOD
else
   NUMCHECK=$((NUMMOD-1))
fi
EXPM=""
NENM=""
TYPM=""
ie=0
while [[ $ie -le $NUMCHECK ]] ; do
      export EXPID=${EXP_LIST[$ie]}
      if [[ $ie -lt $NUMMOD ]] ; then
         export TYPID=${TYP_LIST[$ie]}
         if [[ $TYPID = 0 ]] ; then
            export ORIID=${ORI_LIST[$ie]}
            export CLAID=${CLA_LIST[$ie]}
            export METID=${MET_LIST[$ie]}
            export SYSID=${SYS_LIST[$ie]}
            export STRID=${STR_LIST[$ie]}
         else
            export ORIID=off
            export CLAID=off
            export METID=off
            export SYSID=off
            export STRID=off
         fi
         export NENS=${NEN_LIST[$ie]}
%include <def_exp1.h>
      else
%include <sms_vars.h>
%include <def_exp3.h>
      fi
      EXPM="${EXPM},'${EXPID_LONG}'"
      NENM="${NENM},${NENS}"
      TYPM="${TYPM},${TYPID}"
      ie=$((ie+1))
done #ie
NMOD=$((NUMCHECK+1))
if [[ $NMOD -lt 15 ]] ; then
   n=$NMOD
   while [[ $n -lt 15 ]] ; do
        EXPM="${EXPM},'none'"
        NENM="${NENM},999"
        TYPM="${TYPM},999"
        n=$((n+1))
   done
fi
EXPM=${EXPM#,}
NENM=${NENM#,}
TYPM=${TYPM#,}
#
# Loop over diagnostics
#
id=0
for DIAG in ${DIAG_LIST[*]} ; do
    TARDIR="${DIAG}.${JOB_ID}"
    \rm -rf ${TARDIR}
    mkdir ${TARDIR}
    cp plot_acc_sum.x ${TARDIR}/.
    cp reglist_139 ${TARDIR}/.
    cp reglist_std ${TARDIR}/.
    cd ${TARDIR}
    mkdir ${ecdir}
#
# Copy archive with the output of calculations
#
    ie=0
    while [[ $ie -le $NUMCHECK ]] ; do
          export EXPID=${EXP_LIST[$ie]}
          if [[ $ie -lt $NUMMOD ]] ; then
             export TYPID=${TYP_LIST[$ie]}
             if [[ $TYPID = 0 ]] ; then
                export ORIID=${ORI_LIST[$ie]}
                export CLAID=${CLA_LIST[$ie]}
                export METID=${MET_LIST[$ie]}
                export SYSID=${SYS_LIST[$ie]}
                export STRID=${STR_LIST[$ie]}
             else
                export ORIID=off
                export CLAID=off
                export METID=off
                export SYSID=off
                export STRID=off
             fi
%include <def_exp1.h>
          else
%include <sms_vars.h>
%include <def_exp3.h>
          fi
#
          im=0
          for MM in ${MM_LIST[*]} ; do
              DD=${DD_LIST[$im]}
              TT=${TT_LIST[$im]}
              ROOT1=${EXPID_LONG}_${YY1}-${YY2}_${MM}${DD}${TT}_CV${CROS}_I${ANIN}
              if [[ -s ${DIAG}_${ROOT1}.tar ]] ; then
                 echo "Results already available"
              else
                 ecp -o ec:${ECDISK_LONG}/acc/${DIAG}_${ROOT1}.tar . || echo "${DIAG}_${ROOT1}.tar missing in ECFS"
                 tar xvf ${DIAG}_${ROOT1}.tar
              fi
              im=$((im+1))
          done #MM
          ie=$((ie+1))
    done #ie
#
# Loop over fields
#
    iz=0
    while [[ $iz -le $TOT_ALL_PAR ]] ; do
          PAR=${ALL_PAR[$iz]}
          LEV=${ALL_LEV[$iz]}
          YYS=$YY1
          YYE=$YY2
          if [[ $PAR = 228 ]] ; then
             if [[ $YY1 -lt $YY1_228 ]] ; then
                YYS=$YY1_228
             fi
          fi
#
          REG_LST=""
          n=0
          while [[ $n -lt $TOT_REG ]] ; do
                REG_LST="${REG_LST} 0"
                n=$((n+1))
          done
          set -A REG_LST $REG_LST
          for REG in ${ALL_REG[*]} ; do
              n=0
              while [[ $n -lt $TOT_REG ]] ; do
                    if [[ ${REG_NAM[$n]} == $REG ]] ; then
                       REG_LST[$n]=1
                    fi
                    n=$((n+1))
              done
          done
          rcal=""
          n=0
          while [[ $n -lt $TOT_REG ]] ; do
                rcal="${rcal} ${REG_LST[$n]},"
                n=$((n+1))
          done
cat > pacc_regcal << EOF
rcal=${rcal}
 /
EOF
#
cat > plo_acc_gen << EOF
 &control
  nx=${NX},
  ny=${NY},
  nenm=${NENM},
  iyy1=${YYS},
  iyy2=${YYE},
  nsdt=${NUMSEA},
  imm=${MMlist},
  idd=${DDlist},
  itt=${TTlist},
  cros=${CROS},
  ipar=${PAR},
  ilev=${LEV},
  anin=${ANIN},
  nldt=${NLDT},
  nf1=${SDlist},
  nf2=${EDlist},
  expm=${EXPM},
  typm=${TYPM},
  nmod=${NMOD},
  mult=${MULTI},
  dia='${DIAG}',
  boot=${ACC_BOOT},
  nsam=${ACC_NSAM},
  topth=${ACC_TOPTH},
  botth=${ACC_BOTTH},
EOF
cat > plo_acc_nre << EOF
  nreg=${TOT_REG},
EOF
cat > plo_acc_end << EOF
 /
EOF
          if [[ $PAR -eq 139 ]] ; then
             cat plo_acc_gen plo_acc_nre plo_acc_end reglist_139 pacc_regcal > plo_acc_sum
          else
             cat plo_acc_gen plo_acc_nre plo_acc_end reglist_std pacc_regcal > plo_acc_sum
          fi
          cat plo_acc_sum
          ./plot_acc_sum.x < plo_acc_sum
#
          for REG in ${ALL_REG[*]} ; do
              FILE=${DIAG}_${YYS}-${YYE}_CV${CROS}_I${ANIN}_${PAR}_${LEV}_${REG}
              if [[ $ACC_BOOT = 1 ]] ; then
                 FILE=${FILE}_S${ACC_NSAM}
              fi
              FILE=${FILE}_sum
              if [[ -s ${ecdir}/${FILE}.ps ]] ; then
                 cp ${ecdir}/${FILE}.ps ${SMSWORK}/${ecdir}/.
                 if [[ $ACSP_GIF = 1 ]] ; then
                    convert -rotate 90 ${ecdir}/${FILE}.ps ${SMSGIF}/giffiles/${FILE}.gif
cat>>../acc_sum.html<<EOF
<div style="margin: 0.5em 0.8em 0.5em 0; float:left">
<img id="$FILE.gif" alt="$FILE.gif"
src="giffiles/$FILE.gif"
pbshowcaption="true"
pbcaption="$FILE.gif"
style="width: 525px; height: 350px;"
class="PopBoxImageSmall" title="Click to magnify/shrink"
onclick="Pop(this,50,'PopBoxImageLarge');" /><br />
</div>
EOF
                 fi
              else
                 echo "File ${ecdir}/${FILE}.ps should have been created"
                 exit
              fi
          done #REG loop
          iz=$((iz+1))
    done #iz
    cd ..
    \rm -rf ${TARDIR}
    id=$((id+1))
done #id (diagnostics)
#
cat>>acc_sum.html<<EOF
</br>
</body>
</html>
EOF
mv acc_sum.html ${SMSGIF}/.
#
date
echo "end of plot_acc_sum.sms"
#
%include <tail.h>
